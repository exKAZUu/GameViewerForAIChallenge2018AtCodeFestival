@import 'helpers';

$field-width: 500px;
$grid-spacing: 15px;
$grid-row-cells: 5; // number of cells in a row (nCol in our js)
$grid-col-cells: 5;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
$field-height: $tile-size * $grid-col-cells + $grid-spacing * ($grid-col-cells + 1);
$tile-border-radius: 3px;

$text-color: #776e65;
$bright-text-color: #f9f6f2;

$tile-color: #eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);

$game-container-background: #bbada0;

$transition-speed: 100ms;

* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;

  background: #faf8ef;
  color: $text-color;
  font-size: 16px;
}

#app {
  height: 100vh;
  width: 100vw;
  flex-direction: column;
  display: flex;
  overflow: hidden;
}

#body {
  display: flex;
  flex-grow: 1;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;
}

#stats {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 250px;
  font-size: 1.5rem;
  font-weight: bold;

  #turn {
    font-size: 4rem;
  }
}

#controls {
  display: flex;
  flex-direction: row;
  align-items: center;
  overflow: hidden;
  border-top: 1px solid #eee;
  background: #fff;
  color: #000;

  button,
  input {
    margin: 8px;
    font-size: 16px;
  }
}

.game-container {
  position: relative;
  padding: $grid-spacing;

  cursor: default;
  -webkit-touch-callout: none;
  -ms-touch-callout: none;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;

  -ms-touch-action: none;
  touch-action: none;

  background: $game-container-background;
  border-radius: $tile-border-radius * 2;
  width: $field-width;
  height: $field-height;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.grid-container {
  position: absolute;
  z-index: 1;
}

.grid-row {
  margin-bottom: $grid-spacing;

  &:last-child {
    margin-bottom: 0;
  }

  &:after {
    content: '';
    display: block;
    clear: both;
  }
}

.grid-cell {
  width: $tile-size;
  height: $tile-size;
  margin-right: $grid-spacing;
  float: left;

  border-radius: $tile-border-radius;

  background: rgba($tile-color, 0.35);

  &:last-child {
    margin-right: 0;
  }
}

.tile-container {
  position: absolute;
  z-index: 2;
}

.tile {
  &,
  .tile-inner {
    width: ceil($tile-size);
    height: ceil($tile-size);
    line-height: ceil($tile-size);
  }

  // Build position classes
  @for $x from 1 through $grid-row-cells {
    @for $y from 1 through $grid-col-cells {
      &.tile-position-#{$x}-#{$y} {
        $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
        $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
        @include transform(translate($xPos, $yPos));
      }
    }
  }
}

.tile {
  position: absolute; // Makes transforms relative to the top-left corner

  .tile-inner {
    border-radius: $tile-border-radius;

    background: $tile-color;
    text-align: center;
    font-weight: bold;
    z-index: 10;
  }

  // Movement transition
  @include transition($transition-speed ease-in-out);
  -webkit-transition-property: -webkit-transform;
  -moz-transition-property: -moz-transform;
  transition-property: transform;

  $base: 2;
  $exponent: 1;
  $original-limit: 11;
  $limit: 16;

  // Colors for all 11 states, false = no special color
  $special-colors: false false, false false, #f78e48 true, #fc5e2e true, #ff3333 true, #ff0000 true, false true,
    false true, false true, false true, false true, false true, false true, false true, false true, false true;

  // Build tile colors
  @while $exponent <= $limit {
    $power: pow($base, $exponent);

    &.tile-#{$power} .tile-inner {
      // Calculate base background color
      $gold-percent: min(100, ($exponent - 1) / ($original-limit - 1) * 100);
      $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

      $nth-color: nth($special-colors, $exponent);

      $special-background: nth($nth-color, 1);
      $bright-color: nth($nth-color, 2);

      @if $special-background {
        $mixed-background: mix($special-background, $mixed-background, 55%);
      }

      @if $bright-color {
        color: $bright-text-color;
      }

      // Set background
      background: $mixed-background;

      // Add glow
      $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

      @if not $special-background {
        box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
          inset 0 0 0 1px rgba(white, $glow-opacity / 3);
      }

      // Adjust font size for bigger numbers
      @if $power < 100 {
        font-size: 55px;
      } @else if $power < 1000 {
        font-size: 45px;
      } @else if $power < 10000 {
        font-size: 32.5px;
      } @else {
        font-size: 25px;
      }
    }

    $exponent: $exponent + 1;
  }

  // Super tiles (above 2048)
  &.tile-super .tile-inner {
    color: $bright-text-color;
    background: mix(#333, $tile-gold-color, 95%);

    font-size: 30px;
  }
}

@include keyframes(appear) {
  0% {
    opacity: 0;
    @include transform(scale(0));
  }

  100% {
    opacity: 1;
    @include transform(scale(1));
  }
}

.tile-new .tile-inner {
  @include animation(appear 200ms ease $transition-speed);
  @include animation-fill-mode(backwards);
}

@include keyframes(pop) {
  0% {
    @include transform(scale(0));
  }

  50% {
    @include transform(scale(1.2));
  }

  100% {
    @include transform(scale(1));
  }
}

.tile-merged .tile-inner {
  z-index: 20;
  @include animation(pop 200ms ease $transition-speed);
  @include animation-fill-mode(backwards);
}
